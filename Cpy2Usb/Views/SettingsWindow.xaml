<mah:MetroWindow WindowStartupLocation="CenterScreen"
                 x:Class="Cpy2Usb.Views.SettingsWindow"
                 x:Name="ConfigurationWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:local="clr-namespace:Cpy2Usb.Views"
                 xmlns:command="http://www.galasoft.ch/mvvmlight"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 mc:Ignorable="d"
                 Title="Cpy2USB Settings" Height="306" Width="350" IsMaxRestoreButtonEnabled="False"
                 ResizeMode="CanMinimize">
    <Grid>
        <DockPanel>
            <StackPanel DockPanel.Dock="Top" HorizontalAlignment="Left">
                <CheckBox Content="Verify file checksum" HorizontalAlignment="Left"
                          Margin="5, 10, 0, 0"
                          IsChecked="{Binding IsVerifyChecksumCheckBoxChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          ToolTip="Ensure that the source file hash matches the copied destination file" />

                <CheckBox Content="Overwrite files" HorizontalAlignment="Left"
                          Margin="5, 10, 0, 0"
                          IsChecked="{Binding IsOverwriteCheckBoxChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          ToolTip="Overwrite destination files that already exist that match the source file" />

                <CheckBox Content="Verbose logging" HorizontalAlignment="Left"
                          Margin="5, 10, 0, 0"
                          IsChecked="{Binding IsVerboseCheckBoxChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          ToolTip="Write verbose debug logs to disk" />

                <!-- Yes/No: Copy only to these drives?  -->
                <CheckBox Content="Only copy data if the new drive letter is (CSV; i.e E,F,K): "
                          HorizontalAlignment="Left"
                          Margin="5, 10, 0, 0"
                          IsChecked="{Binding IsStrictCopyDestinationCheckBoxChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          ToolTip="Only copy data to newly inserted USB drives if they match a letter in a list" />

                <!-- Which drives in particular? Comma Separated Values. -->
                <TextBox Width="97" HorizontalAlignment="Left"
                         Margin="12, 10, 0, 0"
                         IsEnabled="{Binding IsStrictCopyDestinationCheckBoxChecked,
                            Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Text="{Binding StrictCopyDestinationDrives, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         ToolTip="If the strict copy option is enabled, only these drives will be copied to if inserted" />

                <CheckBox Content="Delete contents of USB prior to copying" HorizontalAlignment="Left"
                          Margin="5, 10, 0, 0"
                          IsChecked="{Binding DeleteContentsCheckBoxChecked}"
                          ToolTip="Enabling this option will delete all files from the newly inserted USB drives (*respects strict copy option*)" />

                <CheckBox Content="Automatically eject USB when copying has finished" HorizontalAlignment="Left"
                          Margin="5, 10, 0, 0"
                          IsChecked="{Binding AutoEjectCheckBoxChecked}"
                          ToolTip="Enabling this option will 'safely eject' USBs when operations have been completed" />
            </StackPanel>
            <Grid DockPanel.Dock="Bottom">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Content="Save Settings"
                        Width="150"
                        Margin="0, 10, 0, 0"
                        Command="{Binding SaveSettingsButtonClicked}"
                        IsEnabled="{Binding SaveSettingsButtonIsEnabled, 
                            Mode=TwoWay, 
                            UpdateSourceTrigger=PropertyChanged}" />
                <Button Grid.Column="2" Content="Close"
                        Width="100"
                        Margin="0, 10, 0, 0"
                        Command="{Binding CloseWindowCommand, Mode=OneWay}"
                        CommandParameter="{Binding ElementName=ConfigurationWindow}" />
            </Grid>
        </DockPanel>
    </Grid>
</mah:MetroWindow>